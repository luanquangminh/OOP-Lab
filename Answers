//2.2.5
import java.util.Scanner;

public class CalculateAll {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the first number: ");
        double num1 = scanner.nextDouble();
        System.out.print("Enter the second number: ");
        double num2 = scanner.nextDouble();
        double sum = num1 + num2;
        double difference = num1 - num2;
        double product = num1 * num2;
        double quotient;
        System.out.println("Sum: " + sum);
        System.out.println("Difference: " + difference);
        System.out.println("Product: " + product);
        if (num2 == 0) {
            System.out.println("Cannot divide by zero.");
        }
        else  {
            quotient = num1 / num2;
            System.out.println("Quotient: " + quotient);

        } 
        scanner.close();

    }
        
}
//2.2.6
//part 1
import java.util.Scanner;

public class LinearEquation {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        //ax+b=0
        System.out.print("Enter 'a': ");
        double a = scanner.nextDouble();
        System.out.print("Enter 'b': ");
        double b = scanner.nextDouble();
        if (a == 0) {
            if (b == 0) {
                System.out.println("The equation has infinite solution.");
            } else {
                System.out.println("The equation has no solution.");
            }
        } else {
            double solution = -b / a;
            System.out.println("The solution is: " + solution);
        }
        scanner.close();
    }
}
//part 2

import java.util.Scanner;

public class LinearSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the first equation (a11 a12 b1):");
        double a11 = scanner.nextDouble();
        double a12 = scanner.nextDouble();
        double b1 = scanner.nextDouble();
        System.out.println("Enter the second equation (a21 a22 b2):");
        double a21 = scanner.nextDouble();
        double a22 = scanner.nextDouble();
        double b2 = scanner.nextDouble();
        double determinant = a11 * a22 - a21 * a12;
        if (determinant == 0) {
            System.out.println("The system has no unique solution.");
        } else {
            double x1 = (b1 * a22 - b2 * a12) / determinant;
            double x2 = (a11 * b2 - a21 * b1) / determinant;
            System.out.println("The solution is: ");
            System.out.println("x1 = " + x1);
            System.out.println("x2 = " + x2);
        }
        scanner.close();
    }
}
//part 3
import java.util.Scanner;

public class Solve2Equation {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter a b c: ");
        double a = scanner.nextDouble();
        double b = scanner.nextDouble();
        double c = scanner.nextDouble();
        //ax^2+bx+c=0
        if(a == 0){
            if(b == 0){
                if(c == 0){
                    System.out.println("Infinite Solutions!");
                }
                else{
                    System.out.println("No Solution!");
                }
            }
            else{
                double solution = -c / b;
                System.out.println("1 Solution: " + solution);
            }
        }
        else{
            double delta = b * b - 4 * a * c;
            
            if(delta < 0){
                System.out.println("No Real Solutions!");
            }
            else if(delta == 0){
                double solution = -b / (2 * a);
                System.out.println("1 Real Solution: " + solution);
            }
            else{
                double solution1 = (-b + Math.sqrt(delta)) / (2 * a);
                double solution2 = (-b - Math.sqrt(delta)) / (2 * a);
                System.out.println("2 Real Solutions: " + solution1 + ", " + solution2);
            }
        }
        scanner.close();
    }
}

//6.1
import javax.swing.JOptionPane;
public class ChoosingOption{
    public static void main(String[] args) {
        int option = JOptionPane.showConfirmDialog(null, "Do you want to change to the first class ticket?", null, 0);
        JOptionPane.showMessageDialog(null, "You've chosen: " + (option==JOptionPane.YES_OPTION?"Yes":"No"));
        System.exit(0);
    }
}

//6.2
import java.util.Scanner;
public class InputFromKeyBoard {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("What's your name?");
        String strName = scanner.nextLine();
        System.out.println("How old are you?");
        int iAge = scanner.nextInt();
        System.out.println("How tall are you (m)?");
        double dHeight = scanner.nextDouble();
        System.out.println("Mrs/Ms. " + strName + ", " + iAge + " years old. " + "Your height is " + dHeight + ".");
        scanner.close();
    }
}
//6.3
import java.util.Scanner;

public class Triangle {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the size : ");
        int n = scanner.nextInt();
        printTriangle(n);
        scanner.close();
    }
    //tam giac deu 
    public static void printTriangle(int n) {
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n - i; j++) {
                System.out.print(" ");
            }
            for (int j = 1; j <= 2 * i - 1; j++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }
}
//6.4

import java.util.Scanner;

public class DateCount {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int year, month;
        System.out.print("Enter a year: ");
        year = scanner.nextInt();
        while (year < 0) {
            System.out.println("Invalid input. Year must be a positive number.");
            System.out.print("Enter a year: ");
            year = scanner.nextInt();
        }
        System.out.print("Enter a month (1-12): ");
        month = scanner.nextInt();
        while (month < 1 || month > 12) {
            System.out.println("Invalid input. Month must be between 1 and 12.");
            System.out.print("Enter a month (1-12): ");
            month = scanner.nextInt();
        }
        int daysInMonth = getDaysInMonth(year, month);
        System.out.println("Number of days in the month: " + daysInMonth);
        scanner.close();
    }
    public static int getDaysInMonth(int year, int month) {
        switch (month) {
            // case 1, 3, 5, 7, 8, 10, 12:
            //     return 31;
            case 1:
                return 31;
            case 3:
                return 31;
            case 5:
                return 31;  
            case 7:
                return 31;
            case 8:
                return 31;
            case 10:
                return 31;
            case 12:
                return 31;
            // case 4, 6, 9, 11:
            //     return 30;
            case 4:
                return 30;
            case 6:
                return 30;
            case 11:
                return 30;
            case 9:
                return 30;
            case 2:
                return isLeapYear(year) ? 29 : 28;
            default:
                return -1; 
        }
    }
    public static boolean isLeapYear(int year) {
        return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
    }
}

//6.5
import java.util.Arrays;
import java.util.Scanner;

public class ArraySort {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // scanf
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        double[] array = new double[size];
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextDouble();
        }
        // bubblesort
        bubbleSort(array);
        System.out.println("Sorted array: " + Arrays.toString(array));
        // Sum
        double sum = calculateSum(array);
        System.out.println("Sum of array elements: " + sum);
        // AVG
        double average = calculateAverage(array);
        System.out.println("Average of array elements: " + average);
        scanner.close();
    }
    //bubble sort
    public static void bubbleSort(double[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (array[j] > array[j + 1]) {
                    double temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }
    //sum
    public static double calculateSum(double[] array) {
        double sum = 0;
        for (double num : array) {
            sum += num;
        }
        return sum;
    }
    //avg
    public static double calculateAverage(double[] array) {
        double sum = calculateSum(array);
        return sum / array.length;
    }
}

//6.6
import java.util.Scanner;

public class MatrxAdd {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // scanf size
        System.out.print("Input rows size: ");
        int rows = scanner.nextInt();
        System.out.print("Input columns size: ");
        int cols = scanner.nextInt();
        // scanf 1st matrix
        double[][] matrix1 = new double[rows][cols];
        System.out.println("Enter first matrix:");
        inputMatrix(scanner, matrix1);
        // scanf 2nd matrix
        double[][] matrix2 = new double[rows][cols];
        System.out.println("Enter second matrix:");
        inputMatrix(scanner, matrix2);
        // add
        double[][] result = addMatrices(matrix1, matrix2);
        System.out.println("Result:");
        displayMatrix(result);
        scanner.close();
    }
    // scanf matrix
    public static void inputMatrix(Scanner scanner, double[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                matrix[i][j] = scanner.nextDouble();
            }
        }
    }
    // add
    public static double[][] addMatrices(double[][] matrix1, double[][] matrix2) {
        int rows = matrix1.length;
        int cols = matrix1[0].length;
        double[][] result = new double[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[i][j] = matrix1[i][j] + matrix2[i][j];
            }
        }

        return result;
    }
    // printf
    public static void displayMatrix(double[][] matrix) {
        for (double[] row : matrix) {
            for (double num : row) {
                System.out.print(num + " ");
            }
            System.out.println();
        }
    }
}
